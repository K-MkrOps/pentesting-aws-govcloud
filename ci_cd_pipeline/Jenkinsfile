pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                sh 'docker build -t pentesting-backend:latest backend'
                sh 'docker build -t pentesting-aws:latest pentesting_tools/aws'
                sh 'docker build -t pentesting-auth:latest auth'
                sh 'docker build -t pentesting-frontend:latest frontend'
            }
        }
        stage('Test') {
            steps {
                sh 'docker-compose -f docker-compose.tests.yaml up --abort-on-container-exit'
            }
        }
        stage('Deploy') {
            steps {
                sh 'kubectl apply -f k8s/cluster-config/'
                sh 'kubectl apply -f k8s/istio-config/'
                sh 'kubectl apply -f k8s/cert-manager-config/'
                sh 'kubectl apply -f k8s/monitoring_logging.yaml'
                sh 'kubectl apply -f k8s/security_config.yaml'
                sh 'kubectl apply -f k8s/pentesting_deployment.yaml'
                sh 'kubectl apply -f k8s/aws_deployment.yaml'
                sh 'kubectl apply -f k8s/auth_deployment.yaml'
                sh 'kubectl apply -f k8s/service.yaml'
            }
        }
    }
}
