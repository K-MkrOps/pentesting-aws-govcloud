pipeline {
    agent any

    environment {
        IMAGE_TAG = sh(script: 'echo $GIT_COMMIT', returnStdout: true).trim()
    }

    stages {
        stage('Deploy to Dev') {
            environment {
                KUBECONFIG = credentials('kubeconfig-dev')
            }
            steps {
                sh 'kubectl config use-context dev'
                sh 'kubectl apply -f k8s/cluster-config/'
                sh 'kubectl apply -f k8s/istio-config/'
                sh 'kubectl apply -f k8s/cert-manager-config/'
                sh 'kubectl apply -f k8s/monitoring_logging.yaml'
                sh 'kubectl apply -f k8s/security_config.yaml'
                sh 'kubectl set image deployment/pentesting-aws pentesting-aws=your_registry/pentesting-aws:${IMAGE_TAG}'
                sh 'kubectl set image deployment/pentesting-auth pentesting-auth=your_registry/pentesting-auth:${IMAGE_TAG}'
                sh 'kubectl set image deployment/pentesting-backend pentesting-backend=your_registry/pentesting-backend:${IMAGE_TAG}'
                sh 'kubectl set image deployment/pentesting-frontend pentesting-frontend=your_registry/pentesting-frontend:${IMAGE_TAG}'
            }
        }
        stage('Deploy to Staging') {
            environment {
                KUBECONFIG = credentials('kubeconfig-staging')
            }
            steps {
                sh 'kubectl config use-context staging'
                sh 'kubectl apply -f k8s/cluster-config/'
                sh 'kubectl apply -f k8s/istio-config/'
                sh 'kubectl apply -f k8s/cert-manager-config/'
                sh 'kubectl apply -f k8s/monitoring_logging.yaml'
                sh 'kubectl apply -f k8s/security_config.yaml'
                sh 'kubectl set image deployment/pentesting-aws pentesting-aws=your_registry/pentesting-aws:${IMAGE_TAG}'
                sh 'kubectl set image deployment/pentesting-auth pentesting-auth=your_registry/pentesting-auth:${IMAGE_TAG}'
                sh 'kubectl set image deployment/pentesting-backend pentesting-backend=your_registry/pentesting-backend:${IMAGE_TAG}'
                sh 'kubectl set image deployment/pentesting-frontend pentesting-frontend=your_registry/pentesting-frontend:${IMAGE_TAG}'
            }
        }
        stage('Deploy to Prod') {
            environment {
                KUBECONFIG = credentials('kubeconfig-prod')
            }
            steps {
                sh 'kubectl config use-context prod'
                sh 'kubectl apply -f k8s/cluster-config/'
                sh 'kubectl apply -f k8s/istio-config/'
                sh 'kubectl apply -f k8s/cert-manager-config/'
                sh 'kubectl apply -f k8s/monitoring_logging.yaml'
                sh 'kubectl apply -f k8s/security_config.yaml'
                sh 'kubectl set image deployment/pentesting-aws pentesting-aws=your_registry/pentesting-aws:${IMAGE_TAG}'
                sh 'kubectl set image deployment/pentesting-auth pentesting-auth=your_registry/pentesting-auth:${IMAGE_TAG}'
                sh 'kubectl set image deployment/pentesting-backend pentesting-backend=your_registry/pentesting-backend:${IMAGE_TAG}'
                sh 'kubectl set image deployment/pentesting-frontend pentesting-frontend=your_registry/pentesting-frontend:${IMAGE_TAG}'
            }
        }
    }
}
